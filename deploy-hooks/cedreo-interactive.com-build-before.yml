# Placeholder `deploy_build_before` hook for building theme assets locally
# and then copying the files to the remote server
#
# Uncomment the lines below and replace `sage` with your theme folder
#
# ---
- name: Run npm install
  command: npm install
  connection: local
  args:
    chdir: "{{ project.local_path }}/web/app/themes/cedreo-interactive"

- name: Run bower install
  command: bower install
  connection: local
  args:
    chdir: "{{ project.local_path }}/web/app/themes/cedreo-interactive"

- name: Run gulp
  command: gulp --production
  connection: local
  args:
    chdir: "{{ project.local_path }}/web/app/themes/cedreo-interactive"

- name: Copy project local files
  synchronize:
    src: "{{ project.local_path }}/web/app/themes/cedreo-interactive/dist"
    dest: "{{ deploy_helper.new_release_path }}/web/app/themes/cedreo-interactive"
    group: no
    owner: no
    rsync_opts: --chmod=Du=rwx,--chmod=Dg=rx,--chmod=Do=rx,--chmod=Fu=rw,--chmod=Fg=r,--chmod=Fo=r

    # - name: Run yarn install
#   command: yarn install
#   connection: local
#   args:
#     chdir: "{{ project_local_path }}/web/app/themes/sage"
#
# - name: Install Composer dependencies
#   command: composer install --no-ansi --no-dev --no-interaction --no-progress --optimize-autoloader --no-scripts
#   args:
#     chdir: "{{ deploy_helper.new_release_path }}/web/app/themes/sage"
#
# - name: Compile assets for production
#   command: yarn run build:production
#   connection: local
#   args:
#     chdir: "{{ project_local_path }}/web/app/themes/sage"
#
# - name: Copy project local files
#   synchronize:
#     src: "{{ project_local_path }}/web/app/themes/sage/dist"
#     dest: "{{ deploy_helper.new_release_path }}/web/app/themes/sage"
#     group: no
#     owner: no
#     rsync_opts: --chmod=Du=rwx,--chmod=Dg=rx,--chmod=Do=rx,--chmod=Fu=rw,--chmod=Fg=r,--chmod=Fo=r